#import <gradients> 
#import <sdf> 
using namespace std;
// Entry point of the shader code asset //
// @param[default=#00FFFFFF] colorl
// @param[default=#0000C0FF] color2 
// @param[default=5.0,min=4.0,max=9.0] number
// @return color
vec4 main(vec4 colorl, vec4 color2, float center){
    // get time and animate on a loop
    float time = sin(getTime()/4.);
    //get uv coordinates
    vec2 uv = fragment(getVertexTexCoord());
    // assign colors to uv
    vec4 color = mix(colorl, color2, gradientHorizontal(uv));
    // create a rectangle
    auto sdf = sdfRectangleSharp(vec2(0.5, 0.5), vec2(center, center));
    // convert solid to outline
    auto sdfA = sdfAnnular(sdf, 0.005); 
    // assign sdf to uv
    float dist = sdfA(uv);
    float edge = fwidth(dist); 
    float alpha = smoothstep(-edge, +edge, dist);
    //return
    return mix(color, color.rgb0, alpha); 
}
